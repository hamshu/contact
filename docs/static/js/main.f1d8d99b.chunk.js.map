{"version":3,"sources":["components/home/Home.tsx","components/lobby/Lobby.tsx","components/picking/Picking.tsx","components/game/components/Contacted.tsx","components/game/components/GameOver.tsx","components/game/components/Guessing.tsx","components/game/components/PickTheWord.tsx","components/game/components/Resolve.tsx","components/game/components/Waiting.tsx","components/game/Game.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","input","width","Home","classes","React","sGameCode","setGameCode","className","Grid","container","alignItems","justify","direction","item","xs","Paper","to","Button","Input","onChange","e","target","value","placeholder","Lobby","props","query","URLSearchParams","useLocation","search","sDisplayCode","setDisplayCode","sPlayers","setPlayers","get","GridList","cols","length","undefined","map","player","GridListTile","style","height","Picking","sIt","setIt","disabled","onClick","Contacted","GameOver","Guessing","PickTheWord","Resolve","Waiting","src","alt","Game","sState","gameState","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f1d8d99b.chunk.js","sourcesContent":["import { Button, Grid, Input, makeStyles, Paper } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface IHomeProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    \"min-width\": \"150px\",\n  },\n  input: {\n    width: \"100%\",\n  },\n}));\n\nconst Home: React.FunctionComponent<IHomeProps> = () => {\n  const classes = useStyles();\n  const [sGameCode, setGameCode] = React.useState(\"\");\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        alignItems=\"center\"\n        justify=\"space-around\"\n        spacing={3}\n        direction={\"column\"}\n      >\n        <Grid item xs>\n          <h1>Contact the Game</h1>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>\n            <Link to=\"/lobby?state=start\">\n              <Button>New Game</Button>\n            </Link>\n          </Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>\n            <Input\n              onChange={(e): void => {\n                setGameCode(e.target.value);\n              }}\n              placeholder=\"Enter Game Code\"\n              value={sGameCode}\n            ></Input>\n            <br />\n            <Link to={`/lobby?state=join&code=${sGameCode}`}>\n              <Button>Join Game</Button>\n            </Link>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Button, Grid, GridList, GridListTile, Paper } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ninterface ILobbyProps {}\n\nconst Lobby: React.FunctionComponent<ILobbyProps> = (props) => {\n  let query = new URLSearchParams(useLocation().search);\n  const [sDisplayCode, setDisplayCode] = React.useState(\"\");\n  const [sMyName, setMyName] = React.useState(\"\");\n  const [sPlayers, setPlayers] = React.useState([\"\"]);\n\n  React.useEffect(() => {\n    const state = query.get(\"state\");\n    if (state === \"start\") {\n      // create game and display code\n      setDisplayCode(\"SOMECODE\");\n      setPlayers([\"John\", \"Mehar\", \"Clint\"]);\n    } else {\n      // join game and display code and players\n      setDisplayCode(\"SOMEOTHERCODE\");\n      setPlayers([\"John\", \"Mehar\", \"Clint\", \"Me\"]);\n    }\n  }, []);\n  return (\n    <div>\n      <Grid\n        container\n        alignItems=\"center\"\n        justify=\"space-around\"\n        spacing={3}\n        direction={\"column\"}\n      >\n        <Grid item xs>\n          <h1>Contact the Game</h1>\n        </Grid>\n        <Grid item xs>\n          <h2>Lobby</h2>\n        </Grid>\n        <Grid item xs>\n          <GridList cols={1}>\n            {sPlayers.length > 0 && sPlayers !== undefined\n              ? sPlayers.map((player: string) => {\n                  return (\n                    <GridListTile\n                      style={{ height: \"auto\", textAlign: \"center\" }}\n                      key={player}\n                    >\n                      <h3>{player}</h3>\n                    </GridListTile>\n                  );\n                })\n              : null}\n          </GridList>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper>\n            <Link to={`/picking?code=${sDisplayCode}`}>\n              <Button>Pick who's it</Button>\n            </Link>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Lobby;\n","import { Grid, GridList, GridListTile, Paper, Button } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface IPickingProps {}\n\nconst Picking: React.FunctionComponent<IPickingProps> = (props) => {\n  const [sPlayers, setPlayers] = React.useState([\"\"]);\n  const [sIt, setIt] = React.useState(\"\");\n\n  React.useEffect(() => {\n    // Get Players from context which should be synced to Firebase\n    setPlayers([\"John\", \"Mehar\", \"Clint\", \"Me\"]);\n  }, []);\n\n  // useEffect on sIt to let others know who the It pick is\n  // Server side update: when all selected, let client know\n  return (\n    <div>\n      <Grid\n        container\n        alignItems=\"center\"\n        justify=\"space-around\"\n        spacing={3}\n        direction={\"column\"}\n      >\n        <Grid item xs>\n          <h1>Contact the Game</h1>\n        </Grid>\n        <Grid item xs>\n          <h2>Pick Who's It</h2>\n        </Grid>\n        <Grid item xs>\n          <GridList cols={1}>\n            {sPlayers.length > 0 && sPlayers !== undefined\n              ? sPlayers.map((player: string) => {\n                  return (\n                    <GridListTile\n                      style={{ height: \"auto\", textAlign: \"center\" }}\n                      key={player}\n                    >\n                      <Button\n                        disabled={player !== sIt && sIt !== \"\"}\n                        onClick={(e) => {\n                          if (sIt === player) {\n                            setIt(\"\");\n                          } else {\n                            setIt(player);\n                          }\n                        }}\n                      >\n                        {player}\n                      </Button>\n                    </GridListTile>\n                  );\n                })\n              : null}\n          </GridList>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper>\n            <Link to={`/game`}>\n              <Button>Start the Game</Button>\n            </Link>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Picking;\n","import * as React from \"react\";\n\ninterface IContactedProps {}\n\nconst Contacted: React.FunctionComponent<IContactedProps> = (props) => {\n  return <></>;\n};\n\nexport default Contacted;\n","import * as React from \"react\";\n\ninterface IGameOverProps {}\n\nconst GameOver: React.FunctionComponent<IGameOverProps> = (props) => {\n  return <></>;\n};\n\nexport default GameOver;\n","import { Button, Grid, GridList, GridListTile } from \"@material-ui/core\";\nimport * as React from \"react\";\n\ninterface IGuessingProps {}\n\nconst Guessing: React.FunctionComponent<IGuessingProps> = (props) => {\n  return (\n    <>\n      <Grid item xs>\n        <h2>Guessing</h2>\n        <h3>\n          {\" \"}\n          The letter is <em>A</em>\n        </h3>\n      </Grid>\n      <GridList cols={3}>\n        <GridListTile>\n          <Button>CONTACT</Button>\n        </GridListTile>\n        <GridListTile>\n          <Button>WHOOPS UNCONTACT</Button>\n        </GridListTile>\n        <GridListTile>\n          <Button>Screw it I GIVE UP</Button>\n        </GridListTile>\n      </GridList>\n    </>\n  );\n};\n\nexport default Guessing;\n","import * as React from \"react\";\nimport { Button, Grid, Input, Paper } from \"@material-ui/core\";\n\ninterface IPickTheWordProps {}\n\nconst PickTheWord: React.FunctionComponent<IPickTheWordProps> = (props) => {\n  return (\n    <>\n      <Grid item xs>\n        <h3>Rules</h3>\n        <div>\n          <ul>\n            <li>Word must be real</li>\n            <li>Word must be english</li>\n            <li>Word cannot be a proper noun</li>\n          </ul>\n        </div>\n      </Grid>\n      <Grid item xs>\n        <Input\n          onChange={(e): void => {\n            // submit the word up from e.target.value\n          }}\n          placeholder=\"Enter a Word\"\n        ></Input>\n        <br />\n        <Button>Submit My Word</Button>\n      </Grid>\n    </>\n  );\n};\n\nexport default PickTheWord;\n","import * as React from \"react\";\n\ninterface IResolveProps {}\n\nconst Resolve: React.FunctionComponent<IResolveProps> = (props) => {\n  return <></>;\n};\n\nexport default Resolve;\n","import { Grid, Paper } from \"@material-ui/core\";\nimport * as React from \"react\";\n\ninterface IWaitingProps {}\n\nconst Waiting: React.FunctionComponent<IWaitingProps> = (props) => {\n  return (\n    <>\n      <Grid item xs>\n        <h2>Waiting</h2>\n      </Grid>\n      <Grid item xs>\n        <Paper>\n          <img\n            src=\"https://media.giphy.com/media/TbSPeUWjSY2ys/source.gif\"\n            alt=\"trebek\"\n          />\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nexport default Waiting;\n","import { Grid } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport Contacted from \"./components/Contacted\";\nimport GameOver from \"./components/GameOver\";\nimport Guessing from \"./components/Guessing\";\nimport PickTheWord from \"./components/PickTheWord\";\nimport Resolve from \"./components/Resolve\";\nimport Waiting from \"./components/Waiting\";\n\ninterface IGameProps {}\n\nconst Game: React.FunctionComponent<IGameProps> = (props) => {\n  const [sState, setState] = React.useState(\"guess\");\n\n  React.useEffect(() => {\n    // Set State here based on firebase state\n  }, []);\n  const gameState = () => {\n    switch (sState) {\n      case \"waiting\":\n        return <Waiting />;\n      case \"pick\":\n        return <PickTheWord />;\n      case \"guess\":\n        return <Guessing />;\n      case \"contact\":\n        return <Contacted />;\n      case \"resolve\":\n        return <Resolve />;\n      case \"gameover\":\n        return <GameOver />;\n      default:\n        return <Waiting />;\n    }\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        alignItems=\"center\"\n        justify=\"space-around\"\n        spacing={3}\n        direction={\"column\"}\n      >\n        <Grid item xs>\n          <h1>Contact the Game</h1>\n        </Grid>\n        {gameState()}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./components/home/Home\";\nimport Lobby from \"./components/lobby/Lobby\";\n\nimport \"./App.css\";\nimport Picking from \"./components/picking/Picking\";\nimport Game from \"./components/game/Game\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/lobby\">\n          <Lobby />\n        </Route>\n        <Route path=\"/picking\">\n          <Picking />\n        </Route>\n        <Route path=\"/game\">\n          <Game />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}